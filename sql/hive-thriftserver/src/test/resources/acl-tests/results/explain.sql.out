-- Automatically generated by ThriftEndToEndAclTestSuite
-- Number of queries: 25


-- !query 0
create database perm
-- !query 0 token
super
-- !query 0 schema
struct<Result:string>
-- !query 0 output



-- !query 1
create table perm.t1(a int, p int)
-- !query 1 token
super
-- !query 1 schema
struct<Result:string>
-- !query 1 output



-- !query 2
create table perm.t2(a int, p int)
-- !query 2 token
super
-- !query 2 schema
struct<Result:string>
-- !query 2 output



-- !query 3
create function perm.fn1 AS 'org.apache.hadoop.hive.ql.udf.UDFToString'
-- !query 3 token
super
-- !query 3 schema
struct<Result:string>
-- !query 3 output



-- !query 4
create or replace view perm.vw1 as
select t1.a, t2.p from perm.t1, perm.t2 where t1.p = t2.p
-- !query 4 token
super
-- !query 4 schema
struct<Result:string>
-- !query 4 output



-- !query 5
use perm
-- !query 5 token
super
-- !query 5 schema
struct<Result:string>
-- !query 5 output



-- !query 6
use perm
-- !query 6 token
usr1
-- !query 6 schema
struct<Result:string>
-- !query 6 output



-- !query 7
explain select fn1(a) from perm.t1
-- !query 7 token
usr1
-- !query 7 schema
struct<>
-- !query 7 output
java.lang.SecurityException: User does not have permission READ_METADATA on function `perm`.`fn1`


-- !query 8
explain select fn1(t1.a), t2.* from perm.t1, perm.t2 where t1.p = t2.p
-- !query 8 token
usr1
-- !query 8 schema
struct<>
-- !query 8 output
java.lang.SecurityException: User does not have permission READ_METADATA on function `perm`.`fn1`


-- !query 9
explain select * from perm.vw1
-- !query 9 token
usr1
-- !query 9 schema
struct<>
-- !query 9 output
java.lang.SecurityException: User does not have permission READ_METADATA on table `perm`.`vw1`


-- !query 10
grant read_metadata on perm.vw1 to usr1
-- !query 10 token
super
-- !query 10 schema
struct<Result:string>
-- !query 10 output



-- !query 11
explain select * from perm.vw1
-- !query 11 token
usr1
-- !query 11 schema
struct<plan:string>
-- !query 11 output
[== Physical Plan ==
*Project [gen_attr_0#x AS a#x, gen_attr_1#x AS p#x]
+- *SortMergeJoin [gen_attr_2#x], [gen_attr_1#x], Inner
   :- *Sort [gen_attr_2#x ASC NULLS FIRST], false, 0
   :  +- Exchange hashpartitioning(gen_attr_2#x, 200)
   :     +- *Project [a#x AS gen_attr_0#x, p#x AS gen_attr_2#x]
   :        +- *Filter isnotnull(p#x)
   :           +- HiveTableScan [a#x, p#x], MetastoreRelation perm, t1
   +- *Sort [gen_attr_1#x ASC NULLS FIRST], false, 0
      +- Exchange hashpartitioning(gen_attr_1#x, 200)
         +- *Project [p#x AS gen_attr_1#x]
            +- *Filter isnotnull(p#x)
               +- HiveTableScan [p#x], MetastoreRelation perm, t2]


-- !query 12
grant select on anonymous function to usr1
-- !query 12 token
super
-- !query 12 schema
struct<Result:string>
-- !query 12 output



-- !query 13
grant read_metadata on perm.t1 to usr1
-- !query 13 token
super
-- !query 13 schema
struct<Result:string>
-- !query 13 output



-- !query 14
grant select on perm.t1 to usr1
-- !query 14 token
super
-- !query 14 schema
struct<Result:string>
-- !query 14 output



-- !query 15
grant select on perm.t2 to usr1
-- !query 15 token
super
-- !query 15 schema
struct<Result:string>
-- !query 15 output



-- !query 16
explain select fn1(a) from perm.t1
-- !query 16 token
usr1
-- !query 16 schema
struct<>
-- !query 16 output
java.lang.SecurityException: User does not have permission READ_METADATA on function `perm`.`fn1`


-- !query 17
select fn1(t1.a), t2.* from perm.t1, perm.t2 where t1.p = t2.p
-- !query 17 token
usr1
-- !query 17 schema
struct<>
-- !query 17 output
java.lang.SecurityException: User does not have permission SELECT on function `perm`.`fn1`


-- !query 18
explain select fn1(t1.a), t2.* from perm.t1, perm.t2 where t1.p = t2.p
-- !query 18 token
usr1
-- !query 18 schema
struct<>
-- !query 18 output
java.lang.SecurityException: User does not have permission READ_METADATA on function `perm`.`fn1`


-- !query 19
grant read_metadata on perm.t2 to U
-- !query 19 token
super
-- !query 19 schema
struct<Result:string>
-- !query 19 output



-- !query 20
explain select fn1(t1.a), t2.* from perm.t1, perm.t2 where t1.p = t2.p
-- !query 20 token
usr
-- !query 20 schema
struct<plan:string>
-- !query 20 output
[== Physical Plan ==
org.apache.spark.sql.AnalysisException: Undefined function: 'fn1'. This function is neither a registered temporary function nor a permanent function registered in the database 'default'.; line 1 pos 15]


-- !query 21
use default
-- !query 21 token
super
-- !query 21 schema
struct<Result:string>
-- !query 21 output



-- !query 22
drop temp function fn1
-- !query 22 token
super
-- !query 22 schema
struct<>
-- !query 22 output
org.apache.spark.sql.catalyst.analysis.NoSuchFunctionException: Undefined function: 'fn1'. This function is neither a registered temporary function nor a permanent function registered in the database 'null'.;


-- !query 23
drop database perm cascade
-- !query 23 token
super
-- !query 23 schema
struct<Result:string>
-- !query 23 output



-- !query 24
msck repair database __all__ privileges
-- !query 24 token
super
-- !query 24 schema
struct<Result:string>
-- !query 24 output

